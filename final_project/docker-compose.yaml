version: '3.12'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:
  collector:
    build: .
    container_name: solana-collector
    env_file: .env
    volumes:
      - .:/app
    command: uv run indexer/collector.py
    restart: unless-stopped
    networks:
      - app
    labels:
      logging: "promtail"

  parser:
    build: .
    container_name: solana-parser
    env_file: .env
    volumes:
      - .:/app
    command: uv run indexer/parser.py
    depends_on:
      - collector
    restart: unless-stopped
    networks:
      - app
    labels:
      logging: "promtail"

  metrics:
    build: .
    container_name: solana-metrics
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: uv run indexer/metrics.py
    restart: unless-stopped
    networks:
      - app
    labels:
      logging: "promtail"

  validator:
    build: .
    container_name: solana-validator
    env_file: .env
    volumes:
      - .:/app
    command: uv run indexer/validator.py
    depends_on:
      - parser
    restart: unless-stopped
    networks:
      - app
    labels:
      logging: "promtail"

  grafana:
    image: grafana/grafana:11.0.0
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      #- ./config/grafana/datasources/grafana.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./config/grafana/plugins/app.yaml:/etc/grafana/provisioning/plugins/app.yaml
      - ./config/grafana/data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SERVER_HTTP_ADDR=0.0.0.0
      - GF_SERVER_HTTP_PORT=3000
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall lokiLogsDataplane
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
    networks:
      - app
    logging: *default-logging

  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    ports:
      - 3100:3100
    command:
      - "-config.file=/etc/loki/loki.yaml"
      - "-server.http-listen-address=0.0.0.0"
    volumes:
      - ./config/loki/loki.yaml:/etc/loki/loki.yaml
      - ./config/loki/data:/loki
    networks:
      - app
    logging: *default-logging

  promtail:
    image: grafana/promtail:3.0.0
    container_name: promtail
    volumes:
      - ./config/promtail/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/promtail/data:/tmp
    command:
      - config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    networks:
      - app
    logging: *default-logging

  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
        - ./config/prometheus/data:/prometheus
      command:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--web.listen-address=0.0.0.0:9090"
      networks:
        - app

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  promtail_positions:

networks:
  app:
    name: app
