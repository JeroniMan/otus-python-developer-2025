[project]
name = "hm-5"
version = "0.1.0"
description = "Scoring API with tests and key-value store"
authors = [
    {name = "German Kovalev", email = "german.n.kovalev@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "black>=25.1.0",
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "redis>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=4.0.0",
    "parameterized>=0.9.0",
    "black>=24.10.0",
    "flake8>=7.2.0",
    "mypy>=1.15.0",
    "isort>=5.13.2",
    "fakeredis>=2.20.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]
include = ["*.py"]

[tool.pytest.ini_options]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]
testpaths = ["."]
python_files = ["test*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["."]
omit = ["test*.py", "test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]
