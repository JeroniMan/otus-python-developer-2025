[project]
name = "hw-memcache-loader"
version = "0.2.0"
description = "High-performance Memcached data loader for OTUS Python Professional course"
authors = [
    { name = "German Kovalev", email = "german.n.kovalev@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
keywords = ["memcached", "protobuf", "threading", "data-processing", "etl"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries",
]

dependencies = [
    "pymemcache>=4.0.0",
    "protobuf>=4.24.0",
    "progressbar2>=4.3.0",
    "python-utils>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-timeout>=2.3.0",
    "black>=24.4.0",
    "ruff>=0.5.0",
    "flake8>=7.0.0",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
    "bandit>=1.7.0",
    "safety>=3.2.0",
]

docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.25.0",
]

google = [
    "google-api-core>=2.19.0",
    "google-api-python-client>=2.130.0",
    "google-auth>=2.29.0",
    "google-auth-httplib2>=0.2.0",
    "googleapis-common-protos>=1.63.0",
]

all = [
    "hw-memcache-loader[dev,docs,google]",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/hw-memcache-loader"
"Bug Tracker" = "https://github.com/yourusername/hw-memcache-loader/issues"
"Documentation" = "https://yourusername.github.io/hw-memcache-loader"
"Source Code" = "https://github.com/yourusername/hw-memcache-loader"

[project.scripts]
memc-load = "memc_load:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.uv]
dev-dependencies = [
    "pytest>=8.2.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "black>=24.4.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
]

[tool.ruff]
line-length = 88
target-version = "py312"
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "E712",  # comparison to True/False
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG001", "ARG002"]
"appsinstalled_pb2.py" = ["ALL"]  # Generated file

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | appsinstalled_pb2\.py
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = ["appsinstalled_pb2.py"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=.",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-exclude=appsinstalled_pb2.py",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks integration tests",
    "unit: marks unit tests",
    "memcached: marks tests that require memcached",
]
timeout = 30

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "appsinstalled_pb2.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]
ignore_errors = true
precision = 2
show_missing = true

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
severity = "medium"
confidence = "medium"

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "appsinstalled_pb2.py",
]