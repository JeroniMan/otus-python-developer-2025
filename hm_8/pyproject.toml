[tool.poetry]
name = "hm-8-django-polls"
version = "0.1.0"
description = "Django Polls Application - Tutorial Implementation"
authors = ["German Kovalev <german.n.kovalev@gmail.com>"]
readme = "README.md"
packages = [{include = "polls", from = "mysite"}]

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0.0"
django-debug-toolbar = "^4.2.0"
python-dotenv = "^1.0.0"
gunicorn = "^21.2.0"
whitenoise = "^6.6.0"
psycopg2-binary = "^2.9.9"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-django = "^4.7.0"
pytest-cov = "^4.1.0"
coverage = "^7.4.0"
black = "^24.1.0"
isort = "^5.13.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
django-stubs = "^4.2.7"
bandit = "^1.7.5"
safety = "^3.0.0"
pre-commit = "^3.6.0"
factory-boy = "^3.3.0"
faker = "^22.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.env
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip = ["migrations", ".venv", ".env"]
known_django = ["django"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]
exclude = ["migrations/", "venv/", ".venv/"]

[tool.django-stubs]
django_settings_module = "mysite.settings"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "mysite.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "-v --tb=short --strict-markers"
testpaths = ["mysite"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["mysite"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "manage.py",
    "*/settings/*",
    "*/wsgi.py",
    "*/asgi.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "migrations"]
skips = ["B101"]  # Skip assert_used test