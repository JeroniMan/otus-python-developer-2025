version: '3.8'

services:
  http-server:
    build:
      context: tests
      dockerfile: Dockerfile
    container_name: hm7-http-server
    ports:
      - "${PORT:-8080}:8080"
    volumes:
      - ./docs:/app/docs:ro
      - ./logs:/app/logs
    environment:
      - DOCUMENT_ROOT=/app/docs
      - PORT=${PORT:-8080}
      - HOST=0.0.0.0
      - WORKERS=${WORKERS:-4}
      - TIMEOUT=${TIMEOUT:-1000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - webnet
    labels:
      - "com.example.description=HTTP Server for HM7"
      - "com.example.version=0.1.0"

  nginx:
    image: nginx:alpine
    container_name: hm7-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docs:/usr/share/nginx/html:ro
    depends_on:
      - http-server
    networks:
      - webnet
    profiles:
      - with-nginx

  prometheus:
    image: prom/prometheus:latest
    container_name: hm7-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - webnet
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: hm7-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - webnet
    profiles:
      - monitoring

networks:
  webnet:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: